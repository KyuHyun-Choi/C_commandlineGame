#include <Turboc.h> 

#define L 75
#define R 77
#define U 72
#define D 80

//소코반 게임의 2차원 맵을 구현하는 2차원 배열 
char ar[18][21]={ 
	"####################",
	"# ##################",
	"# 0#################",
	"## #################",
	"##     0     #######",
	"############0#######",
	"######0      #######",
	"######0#####0#######",
	"######0  ###########",
	"######## ###########",
	"######## ###########",
	"######## ###########",
	"######## ###########",
	"#######     0#######",
	"####### ####0#######",
	"###0    ############",
	"######             #",
	"####################"
};

int main()
{
	int i,j; //i와 j는 맵구현 배열을 도는 이터레이터 변수 
	int x=1,y=1; //x와 y는 게이머의 2차원 좌표값을 나타냄 
	char ch; //키보드 입력을 받을 변수 
	int sc=0; //점수 저장 변수 
	//map
	for(j=0;j<=17;j++)
		for(i=0;i<=20;i++)
		 {
            //2차원 배열을 돌면서 #의 자리에 ▣를 0의 자리에 ♥를 놓는다. i에 2를 곱하는 이유는 특수문자의 가로 두 칸이 세로 한 칸과 같기 때문이다.
		 	if(ar[j][i]=='#') {gotoxy(i*2,j); puts("▣");} 
			 if(ar[j][i]=='0') {gotoxy(i*2,j); puts("♥");}
		 }
	//map
	
	gotoxy(x*2,y); puts("＠"); 
	
	for(;;)
	{
        //getch함수로 방향키 입력을 정수로 받아 ch변수에 저장. kbhit는 키보드 입력값을 확인하는데 별다른 입력이 없으면 같은 값으로 키보드 입력이 지속되는 효과가 있음.
		//예를 들어 왼쪽 방향키를 한 번 눌렀을 경우 별다른 키입력이 없으면 다음 루프에서 75는 그대로이므로 75가 다시 스위치문으로 이동해 게이머의 좌표를 변화시킴. 
		if(kbhit())ch=getch(); 
	    //새로운 좌표값에 @를 출력시키기전 원래의 좌표값에서 @를 ' '으로 전환하여 마치 @가 옆으로 이동하는 것 같은 효과를 줌. 
		gotoxy(x*2,y);
		puts("  ");
        //각각의 키보드 입력에 따라 x,y의 값을 증감시켜 게이머의 좌표이동, 게이머의 좌표가 #과 같게되면 반대방향으로 게이머를 밀어내서 벽을 통과하지 못하는 효과를 줌. 
		switch(ch){ 
			case L :
				x--;
					if(ar[y][x]=='#')x++;
				break;
			case R :
				x++;
					if(ar[y][x]=='#')x--;
				break;
			case U :
				y--;
					if(ar[y][x]=='#')y++;
				break;
			case D :
				y++;
					if(ar[y][x]=='#')y--;
				break;
				
		}
		if(ar[y][x]=='0') {
			                //게이머의 좌표와 0의 좌표가 일치할 경우 점수sc 1씩 증가 후 0을 빈칸 ' '으로 전환. 
							sc++;
							gotoxy(10,21);
							printf("Score : %4d",sc);
							ar[y][x]=' ';
							//점수가 10점이 되었을 때 (19,16)의 #을 ' '으로 전환하고 특수문자 ▣도 " "으로 전환. 
							if(sc==10) {ar[16][19]=' ';gotoxy(19*2,16);puts("  ");}
							
							}
						
		
		//키보드 입력으로 변경된 좌표에 @출력 후 0.1초 딜레이 
		gotoxy(x*2,y);
	    puts("＠");   
		Sleep(100);
		//점수가 10점이 되면 벽이 열리는데 벽안에서 벽의 최대 x좌표는 18이므로 x좌표가 20이 되었다는 것은 게이머가 벽을 열고 벽 바깥으로 나갔음을 의미함. 벽 바깥으로 나가면 게임 종료. 
		if(x==20)return 0;
	}
	
}
